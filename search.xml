<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一章程序设计与c语言</title>
    <url>/2023/06/25/C%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="fc79318ad5afffa0aa0325c9eac6b182e88c1e23a1e86323d58b5ca78b63fff0"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>c语言</category>
        <category>1.第一章程序设计与c语言</category>
      </categories>
  </entry>
  <entry>
    <title>python基础</title>
    <url>/2023/05/22/python%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h3 id="1-编码"><a href="#1-编码" class="headerlink" title="1.编码"></a><strong>1.编码</strong></h3><h4 id="1-1python文件编码与解码-Python编码解码"><a href="#1-1python文件编码与解码-Python编码解码" class="headerlink" title="1.1python文件编码与解码 Python编码解码"></a>1.1python文件编码与解码 Python编码解码</h4><h5 id="1-1-1-py文件的编码"><a href="#1-1-1-py文件的编码" class="headerlink" title="1.1.1.py文件的编码"></a><strong>1.1.1.py文件的编码</strong></h5><p>Python脚本默认是 ANSCII 编码。如果脚本包含非 ANSCII字符，就要使用coding指示符告诉python编辑器如何保存。具体方法是在第一行或第二行指定编码声明如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">-*- coding=utf-<span class="number">8</span> -*- 或者 <span class="comment">#coding=utf-8</span></span><br></pre></td></tr></table></figure>

<h5 id="1-1-2Python中的字符串类型"><a href="#1-1-2Python中的字符串类型" class="headerlink" title="1.1.2Python中的字符串类型"></a><strong>1.1.2Python中的字符串类型</strong></h5><p>python中有两种字符串类型，分别是 str 和 unicode。</p>
<p>读取一个文件内容或者从网络上读取到内容时，均存储为str类型；在脚本中通过保留字“U”指示是unicode字符串。如果想把一个str转换成特定编码类型，需要把str转为Unicode,然后从unicode转为特定的编码类型：utf-8、gb2312等，中间需要unicode字符串作为过渡</p>
<p>将Unicode对象转换为其他编码使用encode函数。</p>
<p>例子1：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding=UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">s = <span class="string">u&#x27;中国&#x27;</span></span><br><span class="line"></span><br><span class="line">s_gb = s.encode(<span class="string">&#x27;gb2312&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>其他格式转换为 unicode 使用 unicode(s,encoding) 或者 s.decode(encoding)</p>
<p>例子2：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">s = <span class="string">u&#x27;中国&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#s为unicode先转为utf-8</span></span><br><span class="line"></span><br><span class="line">s_utf8 = s.encode(<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span>(s_utf8.decode(<span class="string">&#x27;utf-8&#x27;</span>) == s)</span><br></pre></td></tr></table></figure>

<p>普通的 str 转为 unicode示例：</p>
<p>例子3：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">s = <span class="string">&#x27;中国&#x27;</span></span><br><span class="line"></span><br><span class="line">su = <span class="string">u&#x27;中国&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#s为unicode先转为utf-8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#因为s为所在的.py(# -*- coding=UTF-8 -*-)编码为utf-8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">s_unicode = s.decode(&#x27;</span>UTF-<span class="number">8</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">assert(s_unicode == su)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#s转为gb2312:先转为unicode再转为gb2312</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">s.decode(&#x27;</span>utf-<span class="number">8</span><span class="string">&#x27;).encode(&#x27;</span>gb2312<span class="string">&#x27;)</span></span><br></pre></td></tr></table></figure>

<p>如果直接执行s.encode(‘gb2312’)会发生什么？</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">s = <span class="string">&#x27;中国&#x27;</span></span><br><span class="line"></span><br><span class="line">s.encode(<span class="string">&#x27;gb2312&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>这里会发生一个异常：Python 会隐式的将 s 解码为 unicode ，然后再编码成 gb2312。但解码是python自动进行，使用 sys.defaultencoding 指明的编码。 sys.defaultencoding 一般是 ANSCII，如果 s 不是这个类型就会出错。</p>
<p>对于这种情况，修改方法如下：</p>
<p>明确的指示出 s 原来的编码方式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">&#x27;中文&#x27;</span></span><br><span class="line"></span><br><span class="line">s.decode(<span class="string">&#x27;utf-8&#x27;</span>).encode(<span class="string">&#x27;gb2312&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>更改 sys.defaultencoding 为文件的编码方式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">reload(sys) <span class="comment"># Python2.5 初始化后会删除 sys.setdefaultencoding 这个方法，我们需要重新载入</span></span><br><span class="line"></span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;中文&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span>.encode(<span class="string">&#x27;gb2312&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h5 id="1-1-3python-检测字符串编码格式"><a href="#1-1-3python-检测字符串编码格式" class="headerlink" title="1.1.3python****检测字符串编码格式"></a><strong>1.1.3python****检测字符串编码格式</strong></h5><p><strong>法一：</strong></p>
<p>isinstance(s, str) 用来判断是否为一般字符串</p>
<p>isinstance(s, unicode) 用来判断是否为unicode</p>
<p>或</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">type</span>(<span class="built_in">str</span>).__name__!=<span class="string">&quot;unicode&quot;</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span>=unicode(<span class="built_in">str</span>,<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<p><strong>法二：</strong></p>
<p>使用 chardet 可以很方便的实现字符串&#x2F;文件的编码检测,例子如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">rawdata = urllib.urlopen(<span class="string">&#x27;http://www.google.cn/&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> chardet</span><br><span class="line"></span><br><span class="line">chardet.detect(rawdata)</span><br></pre></td></tr></table></figure>

<p>输出为：{‘confidence’: 0.98999999999999999, ‘encoding’: ‘GB2312’}</p>
<h3 id="2-标识符"><a href="#2-标识符" class="headerlink" title="2.标识符"></a>2.标识符</h3><ol>
<li><p>在 Python 里，标识符由字母、数字、下划线组成。</p>
</li>
<li><p>所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。</p>
</li>
<li><p>Python 中的标识符是区分大小写的。</p>
</li>
</ol>
<h3 id="3-关键字"><a href="#3-关键字" class="headerlink" title="3.关键字"></a>3.关键字</h3><ol>
<li>关键字即预定义保留标识符。</li>
<li>关键字不能在程序中用作标识符，否则会产生编译错误。</li>
</ol>
<p>False	class	from	or  None	continue	global	pass<br>True	def	 if	 raise  and	  del	 import	 return  as	 elif	<br>in	try assert	else	is	while  async  except	lambda	<br>with  await	 finally	nonlocal	yield  break	for	not	 </p>
<h3 id="4-注释"><a href="#4-注释" class="headerlink" title="4.注释"></a>4.注释</h3><p>Python中单行注释以 <strong>#</strong> 开头，实例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># 第一个注释</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Hello, Python!&quot;</span>) <span class="comment"># 第二个注释</span></span><br></pre></td></tr></table></figure>

<p>多行注释可以用多个 <strong>#</strong> 号，还有 <strong>‘’’</strong> 和 **”””**：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第一个注释</span></span><br><span class="line"><span class="comment"># 第二个注释</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">第三注释</span></span><br><span class="line"><span class="string">第四注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">第五注释</span></span><br><span class="line"><span class="string">第六注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Hello, Python!&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="5-行与缩进"><a href="#5-行与缩进" class="headerlink" title="5.行与缩进"></a>5.行与缩进</h3><p>python最具特色的就是使用 <strong>缩进</strong> 来表示代码块，不需要使用大括号 {} 。</p>
<p>缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。实例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;True&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;False&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>以下代码最后一行语句缩进数的空格数不一致，会导致运行错误：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;Answer&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;True&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;Answer&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span> (<span class="string">&quot;False&quot;</span>)    <span class="comment"># 缩进不一致，会导致运行错误</span></span><br></pre></td></tr></table></figure>

<p>以上程序由于缩进不一致，执行后会出现类似以下错误：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">File <span class="string">&quot;test.py&quot;</span>, line <span class="number">6</span></span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;False&quot;</span>)    <span class="comment"># 缩进不一致，会导致运行错误</span></span><br><span class="line">                                      ^</span><br><span class="line">IndentationError: unindent does <span class="keyword">not</span> <span class="keyword">match</span> <span class="built_in">any</span> outer indentation level</span><br></pre></td></tr></table></figure>

<h3 id="6-多行语句"><a href="#6-多行语句" class="headerlink" title="6.多行语句"></a>6.多行语句</h3><p>Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠 *<em>*</em> 来实现多行语句，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">total = item_one + \</span><br><span class="line">        item_two + \</span><br><span class="line">        item_three</span><br></pre></td></tr></table></figure>

<p>在 [], {}, 或 () 中的多行语句，不需要使用反斜杠 ****，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">total = [<span class="string">&#x27;item_one&#x27;</span>, <span class="string">&#x27;item_two&#x27;</span>, <span class="string">&#x27;item_three&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;item_four&#x27;</span>, <span class="string">&#x27;item_five&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="7-数字-Number-类型"><a href="#7-数字-Number-类型" class="headerlink" title="7.数字(Number)类型"></a>7.数字(Number)类型</h3><p>python中数字有四种类型：整数、布尔型、浮点数和复数。</p>
<ol>
<li><p><strong>int</strong> (整数), 如 1, 只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。</p>
</li>
<li><p><strong>bool</strong> (布尔), 如 True。</p>
</li>
<li><p><strong>float</strong> (浮点数), 如 1.23、3E-2</p>
</li>
<li><p><strong>complex</strong> (复数), 如 1 + 2j、 1.1 + 2.2j</p>
</li>
</ol>
<h3 id="8-字符串-String"><a href="#8-字符串-String" class="headerlink" title="8.字符串(String)"></a>8.字符串(String)</h3><ol>
<li>Python 中单引号 <strong>‘</strong> 和双引号 <strong>“</strong> 使用完全相同。</li>
<li>使用三引号(<strong>‘’’</strong> 或 <strong>“””</strong>)可以指定一个多行字符串。</li>
<li>转义符 ****。</li>
<li>反斜杠可以用来转义，使用 <strong>r</strong> 可以让反斜杠不发生转义。 如 <strong>r”this is a line with \n”</strong> 则 <strong>\n</strong> 会显示，并不是换行。</li>
<li>按字面意义级联字符串，如 <strong>“this “ “is “ “string”</strong> 会被自动转换为 <strong>this is string</strong>。</li>
<li>字符串可以用 <strong>+</strong> 运算符连接在一起，用 ***** 运算符重复。</li>
<li>Python 中的字符串有两种索引方式，从左往右以 <strong>0</strong> 开始，从右往左以 <strong>-1</strong> 开始</li>
<li>Python 中的字符串不能改变。</li>
<li>Python 没有单独的字符类型，一个字符就是长度为 1 的字符串。</li>
<li>字符串的截取的语法格式如下：<strong>变量[头下标:尾下标:步长]</strong></li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">word = <span class="string">&#x27;字符串&#x27;</span></span><br><span class="line">sentence = <span class="string">&quot;这是一个句子。&quot;</span></span><br><span class="line">paragraph = <span class="string">&quot;&quot;&quot;这是一个段落，</span></span><br><span class="line"><span class="string">可以由多行组成&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#例子1</span></span><br><span class="line"><span class="built_in">str</span>=<span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)                 <span class="comment"># 输出字符串</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">0</span>:-<span class="number">1</span>])           <span class="comment"># 输出第一个到倒数第二个的所有字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">0</span>])              <span class="comment"># 输出字符串第一个字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">2</span>:<span class="number">5</span>])            <span class="comment"># 输出从第三个开始到第六个的字符（不包含）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">2</span>:])             <span class="comment"># 输出从第三个开始后的所有字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">1</span>:<span class="number">5</span>:<span class="number">2</span>])          <span class="comment"># 输出从第二个开始到第五个且每隔一个的字符（步长为2）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span> * <span class="number">2</span>)             <span class="comment"># 输出字符串两次</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span> + <span class="string">&#x27;你好&#x27;</span>)         <span class="comment"># 连接字符串</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------------------------------&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello\nrunoob&#x27;</span>)      <span class="comment"># 使用反斜杠(\)+n转义特殊字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&#x27;hello\nrunoob&#x27;</span>)     <span class="comment"># 在字符串前面添加一个 r，表示原始字符串，不会发生转义</span></span><br></pre></td></tr></table></figure>

<p>以上实例输出结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">123456789</span></span><br><span class="line"><span class="number">12345678</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">345</span></span><br><span class="line"><span class="number">3456789</span></span><br><span class="line"><span class="number">24</span></span><br><span class="line"><span class="number">123456789123456789</span></span><br><span class="line"><span class="number">123456789</span>你好</span><br><span class="line">------------------------------</span><br><span class="line">hello</span><br><span class="line">runoob</span><br><span class="line">hello\nrunoob</span><br></pre></td></tr></table></figure>

<h3 id="9-import-与-from…import"><a href="#9-import-与-from…import" class="headerlink" title="9.import 与 from…import"></a>9.import 与 from…import</h3><p>在 python 用 <strong>import</strong> 或者 <strong>from…import</strong> 来导入相应的模块。</p>
<p>将整个模块(somemodule)导入，格式为:<strong>import somemodule</strong></p>
<p>从某个模块中导入某个函数,格式为:<strong>from somemodule import somefunction</strong></p>
<p>从某个模块中导入多个函数,格式为:<strong>from somemodule import firstfunc, secondfunc, thirdfunc</strong></p>
<p>将某个模块中的全部函数导入，格式为:**from somemodule import **</p>
]]></content>
      <categories>
        <category>python</category>
        <category>python基础</category>
      </categories>
  </entry>
  <entry>
    <title>wps2</title>
    <url>/2023/06/26/wps2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="505c59f75c2d181654feec448b6e9e6eb3b62c29aa971d6670fcb4d7c087e999"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>wps</category>
        <category>2.题库</category>
      </categories>
  </entry>
  <entry>
    <title>wps1</title>
    <url>/2023/06/25/wps1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="0b7806a6491277425ed5f7c20ac25b89882713681cd4d49c8eaa47202f3eb28a"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>wps</category>
        <category>1.题库</category>
      </categories>
  </entry>
  <entry>
    <title>数据分析算法</title>
    <url>/2023/05/24/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95%E5%B8%B8%E7%94%A8%E7%9A%84%E6%9C%89/</url>
    <content><![CDATA[<h1 id="数据分析算法"><a href="#数据分析算法" class="headerlink" title="数据分析算法"></a>数据分析算法</h1><h1 id="一、算法"><a href="#一、算法" class="headerlink" title="一、算法"></a>一、算法</h1><p>本学期的大纲</p>
<p><img src="/../img/%E7%AE%97%E6%B3%95%E5%A4%A7%E7%BA%B2/%E7%AE%97%E6%B3%95%E5%A4%A7%E7%BA%B2.png" class="lazyload placeholder" data-srcset="/../img/%E7%AE%97%E6%B3%95%E5%A4%A7%E7%BA%B2/%E7%AE%97%E6%B3%95%E5%A4%A7%E7%BA%B2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20210902165955099"></p>
<h2 id="常见的预算算法"><a href="#常见的预算算法" class="headerlink" title="常见的预算算法"></a><strong>常见的预算算法</strong></h2><p>线性回归（Linear Regression）：线性回归是一种常见的预测算法，其基本思想是通过拟合一条直线来预测一个连续的数值。线性回归可以用于解决回归问题，例如房价预测、股票价格预测等。</p>
<p>逻辑回归（Logistic Regression）：逻辑回归是一种常见的分类算法，其基本思想是通过拟合一条S形曲线来预测一个二元变量的概率。逻辑回归可以用于解决二元分类问题，例如信用风险评估、疾病诊断等。</p>
<p>决策树（Decision Tree）：决策树是一种常见的分类和回归算法，其基本思想是通过构建一棵树来预测一个离散或连续的数值。决策树可以用于解决多类别分类问题、回归问题、异常检测等。</p>
<p>随机森林（Random Forest）：随机森林是一种基于决策树的集成学习算法，其基本思想是通过构建多个决策树来预测一个离散或连续的数值。随机森林可以用于解决多类别分类问题、回归问题、异常检测等。</p>
<p>支持向量机（Support Vector Machine）：支持向量机是一种常见的分类算法，其基本思想是通过构建一个分割超平面来将不同类别的数据分开。支持向量机可以用于解决二元和多元分类问题、回归问题等。</p>
<p>K近邻（K-Nearest Neighbor）：K近邻是一种基于距离度量的分类算法，其基本思想是根据相邻的K个样本的类别来预测一个新样本的类别。K近邻可以用于解决多类别分类问题、回归问题等。</p>
<p>神经网络（Neural Network）：神经网络是一种模拟人类神经系统的计算模型，其基本思想是通过构建多个神经元和多层神经元之间的连接来预测一个离散或连续的数值。神经网络可以用于解决分类问题、回归问题等。</p>
<p>贝叶斯分类（Bayesian Classification）：贝叶斯分类是一种基于贝叶斯定理的分类算法，其基本思想是通过计算一个新样本属于某个类别的概率来进行分类。贝叶斯分类可以用于解决文本分类、垃圾邮件分类等。</p>
<p>主成分分析（Principal Component Analysis）：主成分分析是一种常见的降维算法，其基本思想是通过线性变换将高维数据映射到低维空间中，从而减少特征维度，提高模型的效率。主成分分析可以用于解决图像识别、信号处理等。</p>
<p>集成学习（Ensemble Learning）：集成学习是一种将多个分类器组合起来进行预测的方法，其基本思想是通过投票、加权平均等方式来获得更加准确的预测结果。集成学习可以用于解决分类问题、回归问题等。</p>
<h2 id="十大数据分析算法"><a href="#十大数据分析算法" class="headerlink" title="十大数据分析算法"></a><strong>十大数据分析算法</strong></h2><p>1.C4.5(分类决策树)</p>
<p>2.K-均值算法和k-临近算法</p>
<p>3.SVM</p>
<p>4.Apriori算法</p>
<p>5.KNN算法</p>
<p>6.PageRank算法</p>
<p>7.支持向量机</p>
<p>8.EM算法</p>
<p>9.AdaBoost算法</p>
<p>10.朴素贝叶斯算法和回归树算</p>
<h2 id="十大数据分析算法的解释"><a href="#十大数据分析算法的解释" class="headerlink" title="十大数据分析算法的解释"></a><strong>十大数据分析算法的解释</strong></h2><p>1.C4.5 决策树算法，在创建的过程中进行剪枝，并且可以处理连续的属性，也可以对不完整的数据进行处理。他是决策树算法中具有里程碑式的算法。</p>
<p>2.朴素贝叶斯（Naive Bayes) 基于概率论的原理。基本思想：对于给出的具体物体想进行分类就要 算出这个物体出现条件下各个类别出现的概率，那个概率最大，该物体就属于哪一类。</p>
<p>3.SVM 支持向量机算法。SVM在训练过程中建立了超平面的分类模型，将低维的数据映射到高维进行分类。</p>
<p>4.KNN K最近邻算法，K-Nearest Neighbour。所谓的K近邻，就是每个样本都可以用它最接近的K个邻居来代表。即一个样本，他的K个最近的邻居都属于分类A，那么这个样本也属于分类A。</p>
<p>5.AdaBoost 自适应提升算法，他在分类时建立了一个联合的分类模型，他可以用多个弱分类器组成一个强的分类器。</p>
<p>6.CART Classification And Regression Trees,和C4.5一样他是一个决策树算法。</p>
<p>7.Apriori 挖掘关联规则（associate rules）算法，他通过挖掘频繁项集（frequent item sets）来揭示物品之间的关联关系，他被广泛运用到商业挖掘和网络安全等领域。</p>
<p>8.K-Means 聚类算法，将所有物体划分成K类。假设每个类里面都有”中心点“，即意见领袖，他时这个类的核心。这时如果有一个新的物品要进行分类，这时就只要计算这个点与K个中心点的距离，与那个中心点近，就属于那个类。</p>
<p>9.EM 聚类算法，也叫最大期望算法，是求参数的最大似然估计的一种方法。原理是这样的：假设我们想要评估参数 A 和参数 B，在开始状态下二者都是未知的，并且知道了 A 的信息就可以得到 B 的信息，反过来知道了 B 也就得到了 A。可以考虑首先赋予 A 某个初值，以此得到 B 的估值，然后从 B 的估值出发，重新估计 A 的取值，这个过程一直持续到收敛为止。</p>
<p>10.PangRank PageRank 起源于论文影响力的计算方式，如果一篇文论被引入的次数越多，就代表这篇论文的影响力越强。同样 PageRank 被 Google 创造性地应用到了网页权重的计算中：当一个页面链出的页面越多，说明这个页面的“参考文献”越多，当这个页面被链入的频率越高，说明这个页面被引用的次数越高。基于这个原理，我们可以得到网站的权重划分。</p>
<h2 id="期末作业"><a href="#期末作业" class="headerlink" title="期末作业"></a>期末作业</h2><p>总体要求:运用<strong>数据分析算法</strong>对所选取的<strong>数据集</strong>进行<strong>分析处理</strong>和<strong>可视化展示</strong></p>
<p>基本要点:</p>
<p>1、数据集:</p>
<p>1.1.可以自行运用网络爬虫技术从网络上爬取某个专题的数据集；</p>
<p>1.2.从天池大数据数据集(<a href="https://tianchi.aliyun.com/dataset/">https://tianchi.aliyun.com/dataset/</a>)</p>
<p>1.3.美国加利福尼亚大学尔湾分校公开数据集(<a href="https://archive-beta.ics.uci.edu/datasets)%EF%BC%9B">https://archive-beta.ics.uci.edu/datasets)；</a></p>
<p>1.4.Kaggle数据集(https:&#x2F; &#x2F;<a href="http://www.kaggle.com/datasets%EF%BC%89%EF%BC%9B">www.kaggle.com/datasets）；</a></p>
<p>1.5.其他共享平台上下载数据集</p>
<p>2、数据分析算法:</p>
<p>​       包括但不限于本学期所学过的各算法，也可以是其他<strong>机器学习</strong>或<strong>深度学习算法</strong>，例如:随机森林，具体的数据分析实现可以直接使用Python的机器学习库Scikit-learn或Spark的机器学习算法库MLib(可使用Scala或PySpark编程调用相应模块)实现。</p>
<p>3、数据可视化:</p>
<p>​       可以运用ECharts、D3.js等可视化组件库直接进行数据可视化，也可以运用Datart(Cloud集群中已经安装部署有)、FineBI等工具进行可视化分析和展示。要求给出<strong>不少于3种类型</strong>且<strong>至少有5个的可视化图形</strong>。<br>4、高得分点:<br>​       运用多个算法进行数据分析和比较（每多运用一个算法加5~10分)4.2制作得到可视化大屏，而非数个单—的可视化图表<br>答辩要求:最后一周进行课程答辩。</p>
]]></content>
      <categories>
        <category>算法</category>
        <category>2.数据分析算法</category>
      </categories>
  </entry>
  <entry>
    <title>线性回归算法</title>
    <url>/2023/05/23/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="8c080e3e3d4136934bf91351f00ef51bc486847182ff8908e2798ebf3396c80c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>算法</category>
        <category>线性回归</category>
      </categories>
  </entry>
  <entry>
    <title>考研课本如何购买</title>
    <url>/2023/06/07/%E7%8E%B0%E4%BB%A3%E6%95%99%E8%82%B2%E6%8A%80%E6%9C%AF%EF%BC%88%E4%B8%93%E7%A1%95%EF%BC%89/</url>
    <content><![CDATA[<h3 id="研招网查的数据"><a href="#研招网查的数据" class="headerlink" title="研招网查的数据"></a>研招网查的数据</h3><p><strong>学校</strong>                                                           黔南民族师范学院</p>
<p><strong>院系所</strong>                                                      (007)计算机与信息学院<br><strong>专业</strong>                                                          (045114)(专业学位)现代教育技术<br><strong>研究方向</strong>                                                  (00)不区分研究方向<br><strong>拟招人数</strong>                                                  院系所:12(不含推免)<br><strong>考试方式统考</strong>                                          学习方式全日制<br><strong>指导老师</strong><br><strong>考试范围</strong>         </p>
<p>**政治(101) **                                                 思想政治理论（见招生简章）<br><strong>外语(204)</strong>                                                  英语（二)（见招生简章）<br><strong>业务课一(333)</strong>                                          教育综合（见招生简章）<br><strong>业务课二(808)</strong>                                          现代教育技术综合（见招生简章）</p>
<p><img src="/../yan/%E7%A0%94%E6%8B%9B%E7%BD%91.png" class="lazyload placeholder" data-srcset="/../yan/%E7%A0%94%E6%8B%9B%E7%BD%91.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p>
<p><img src="/../yan/%E8%AF%BE%E6%9C%AC.png" class="lazyload placeholder" data-srcset="/../yan/%E8%AF%BE%E6%9C%AC.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="考研课本除了政英"></p>
]]></content>
      <categories>
        <category>现代教育技术</category>
        <category>1.课本如何购买</category>
      </categories>
  </entry>
  <entry>
    <title>记忆+复习</title>
    <url>/2023/06/26/%E8%8B%B1%E8%AF%AD1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="db3f07c8b441b27e5a24ba3ee2c1eacbff79aa6447d31fb9e7d20c0185b48e2f"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>英语</category>
        <category>1.记忆+复习</category>
      </categories>
  </entry>
  <entry>
    <title>计算机网络1</title>
    <url>/2023/06/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="3d5e2cf269fefeca079f5a232bad8abba75602f2e45345d52b95245240d699b3"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>计算机网络</category>
        <category>1.计算机网络1</category>
      </categories>
  </entry>
  <entry>
    <title>随机森林算法</title>
    <url>/2023/05/23/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5697434357b12b205a186a70060232bb98380f1df03b423b8f2e7f307a4c1c29"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>算法</category>
        <category>随机森林算法</category>
      </categories>
  </entry>
  <entry>
    <title>javase</title>
    <url>/2023/05/22/javase/</url>
    <content><![CDATA[<h2 id="1基本语法"><a href="#1基本语法" class="headerlink" title="1基本语法"></a>1基本语法</h2><h3 id="1-1-关键字"><a href="#1-1-关键字" class="headerlink" title="1.1 关键字"></a><strong>1.1 关键字</strong></h3><p>Java自己保留的一些单词，作为特殊功能的，例如：public、class、byte、short、int、long、double… </p>
<p>我们不能用来作为类名或者是变量名称，否则报错。</p>
<p>注意：关键字很多，不用刻意去记。</p>
<table>
<thead>
<tr>
<th><strong>abstract</strong></th>
<th><strong>assert</strong></th>
<th><strong>boolean</strong></th>
<th><strong>break</strong></th>
<th><strong>byte</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>case</strong></td>
<td><strong>catch</strong></td>
<td><strong>char</strong></td>
<td><strong>class</strong></td>
<td><strong>const</strong></td>
</tr>
<tr>
<td><strong>continue</strong></td>
<td><strong>default</strong></td>
<td><strong>do</strong></td>
<td><strong>double</strong></td>
<td><strong>else</strong></td>
</tr>
<tr>
<td><strong>enum</strong></td>
<td><strong>extends</strong></td>
<td><strong>final</strong></td>
<td><strong>finally</strong></td>
<td><strong>float</strong></td>
</tr>
<tr>
<td><strong>for</strong></td>
<td><strong>goto</strong></td>
<td><strong>if</strong></td>
<td><strong>implements</strong></td>
<td><strong>import</strong></td>
</tr>
<tr>
<td><strong>instanceof</strong></td>
<td><strong>int</strong></td>
<td><strong>interface</strong></td>
<td><strong>long</strong></td>
<td><strong>native</strong></td>
</tr>
<tr>
<td><strong>new</strong></td>
<td><strong>package</strong></td>
<td><strong>private</strong></td>
<td><strong>protected</strong></td>
<td><strong>public</strong></td>
</tr>
<tr>
<td><strong>return</strong></td>
<td><strong>strictfp</strong></td>
<td><strong>short</strong></td>
<td><strong>static</strong></td>
<td><strong>super</strong></td>
</tr>
<tr>
<td><strong>switch</strong></td>
<td><strong>synchronized</strong></td>
<td><strong>this</strong></td>
<td><strong>throw</strong></td>
<td><strong>throws</strong></td>
</tr>
<tr>
<td><strong>transient</strong></td>
<td><strong>try</strong></td>
<td><strong>void</strong></td>
<td><strong>volatile</strong></td>
<td><strong>while</strong></td>
</tr>
</tbody></table>
<h3 id="1-2-标识符"><a href="#1-2-标识符" class="headerlink" title="1.2 标识符"></a><strong>1.2 标识符</strong></h3><p>凡是自己可以起名字的地方都叫标识符。</p>
<p>通常有：类名、变量名、方法名。。。。包名、接口名、。。。</p>
<p>规则：（必须按照如下的规则执行，一旦某规则不符合，编译运行时就会出问题）</p>
<p>由 26 个英文字母大小写，0-9 ，_或 $ 组成数字不可以开头。</p>
<p>不可以使用关键字和保留字，但能包含关键字和保留字。</p>
<p>Java 中严格区分大小写，长度无限制。</p>
<p>标识符不能包含空格。</p>
<p>命名的习惯：（如果不遵守，实际上程序编译运行也不会出问题）  </p>
<p>包名：多单词组成时所有字母都小写：xxxyyyzzz</p>
<p> 类名、接口名：多单词组成时，所有单词的首字母大写：XxxYyyZzz</p>
<p> 变量名、方法名：多单词组成时，第一个单词首字母小写，第二个单词开始每个</p>
<p> 单词首字母大写：xxxYyyZzz</p>
<h3 id="1-3-变量"><a href="#1-3-变量" class="headerlink" title="1.3 变量"></a><strong>1.3 变量</strong></h3><p>变量的分类</p>
<p> 1）存在的位置的不同：成员变量（属性、Field）(存在于类内部，方法体的外部)</p>
<p> 和局部变量(方法体的内部、 构造器的内部、代码块的内部、方法体或构造器的形参部分)</p>
<p> 2）数据类型的不同：</p>
<p><img src="/../images/image-20210902165955099.png" class="lazyload placeholder" data-srcset="/../images/image-20210902165955099.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20210902165955099"></p>
<p><img src="H:/分布式系统/20220907/资料/javaSE.assets/20200229182512991.png" class="lazyload placeholder" data-srcset="H:/分布式系统/20220907/资料/javaSE.assets/20200229182512991.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="在这里插入图片描述"></p>
<h3 id="1-4-基本数据类型（8-种"><a href="#1-4-基本数据类型（8-种" class="headerlink" title="1.4 基本数据类型（8 种)"></a><strong>1.4 基本数据类型（8 种)</strong></h3><p>整型：byte、short、int、long</p>
<p>浮点型：float,double</p>
<p>布尔型：boolean</p>
<p>字符型：char</p>
<p><strong>引用数据类型</strong></p>
<p>类、接口、数组</p>
<p><strong>变量的使用</strong></p>
<h3 id="1-5-运算符"><a href="#1-5-运算符" class="headerlink" title="1.5 运算符"></a><strong>1.5 运算符</strong></h3><p>算术运算符 ++ –</p>
<p> 赋值运算符&#x3D;</p>
<p> 比较运算符（关系运算符）&gt;, &gt;&#x3D;,&#x3D;&#x3D;,!&#x3D;</p>
<p> 逻辑运算符&amp;&amp;,||,!</p>
<pre><code> “&amp;”和“&amp;&amp;”的区别：&amp;：当左端为 false 时，右端继续执行
</code></pre>
<p>​	 &amp;&amp;：当左端为 false 时，右端不再执行</p>
<p>​	“|”和“||”的区别：|：当左端为 true 时，右端继续执行</p>
<p>​	||：当左端为 true 时，右端不再执行</p>
<p>三元运算符</p>
<p><img src="/../images/image-20210906163424498.png" class="lazyload placeholder" data-srcset="/../images/image-20210906163424498.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="image-20210906163424498"></p>
<h3 id="1-6-数据输入（应用）"><a href="#1-6-数据输入（应用）" class="headerlink" title="1.6 数据输入（应用）"></a>1.6 数据输入（应用）</h3><p>我们可以通过 Scanner 类来获取用户的输入。使用步骤如下：</p>
<p>1、导包。Scanner 类在java.util包下，所以需要将该类导入。导包的语句需要定义在类的上面。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner; </span><br></pre></td></tr></table></figure>

<p>2、创建Scanner对象。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);<span class="comment">// 创建Scanner对象，sc表示变量名，其他均不可变</span></span><br></pre></td></tr></table></figure>

<p>3、接收数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> sc.nextInt(); <span class="comment">// 表示将键盘录入的值作为int数返回。</span></span><br></pre></td></tr></table></figure>

<p>示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScannerDemo</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//创建对象</span></span><br><span class="line">		<span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		<span class="comment">//接收数据</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">		<span class="comment">//输出数据</span></span><br><span class="line">		System.out.println(<span class="string">&quot;x:&quot;</span> + x);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2流程控制语句（应用）"><a href="#2流程控制语句（应用）" class="headerlink" title="2流程控制语句（应用）"></a>2流程控制语句（应用）</h2><p>在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。</p>
<h3 id="2-1-流程控制语句分类"><a href="#2-1-流程控制语句分类" class="headerlink" title="2.1 流程控制语句分类"></a>2.1 流程控制语句分类</h3><p>​	顺序结构</p>
<p>​	分支结构(if, switch)</p>
<p>​	循环结构(for, while, do…while)</p>
<h3 id="2-2-顺序结构"><a href="#2-2-顺序结构" class="headerlink" title="2.2 顺序结构"></a>2.2 顺序结构</h3><p>顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p>
<p>顺序结构执行流程图：</p>
<p><img src="/../images/1545615769372.png" class="lazyload placeholder" data-srcset="/../images/1545615769372.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="1545615769372"></p>
<h3 id="2-3分支结构：if语句"><a href="#2-3分支结构：if语句" class="headerlink" title="2.3分支结构：if语句"></a>2.3分支结构：if语句</h3><h4 id="if语句格式1"><a href="#if语句格式1" class="headerlink" title="if语句格式1"></a>if语句格式1</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行流程：</p>
<p>①首先计算关系表达式的值</p>
<p>②如果关系表达式的值为true就执行语句体</p>
<p>③如果关系表达式的值为false就不执行语句体</p>
<p>④继续执行后面的语句内容</p>
<p><img src="/../images/1545616039363.png" class="lazyload placeholder" data-srcset="/../images/1545616039363.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="1545616039363"></p>
<p>示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;开始&quot;</span>);	</span><br><span class="line">		<span class="comment">//定义两个变量</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">		<span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;	</span><br><span class="line">		<span class="comment">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span></span><br><span class="line">		<span class="keyword">if</span>(a == b) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;a等于b&quot;</span>);</span><br><span class="line">		&#125;		</span><br><span class="line">		<span class="comment">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">if</span>(a == c) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;a等于c&quot;</span>);</span><br><span class="line">		&#125;		</span><br><span class="line">		System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="if语句格式2"><a href="#if语句格式2" class="headerlink" title="if语句格式2"></a>if语句格式2</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;	</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    语句体<span class="number">2</span>;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行流程：</p>
<p>①首先计算关系表达式的值</p>
<p>②如果关系表达式的值为true就执行语句体1</p>
<p>③如果关系表达式的值为false就执行语句体2</p>
<p>④继续执行后面的语句内容</p>
<p><img src="/../images/1545616221283.png" class="lazyload placeholder" data-srcset="/../images/1545616221283.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="1545616221283"></p>
<p>示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo02</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;开始&quot;</span>);		</span><br><span class="line">		<span class="comment">//定义两个变量</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">		<span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">		b = <span class="number">5</span>;	</span><br><span class="line">		<span class="comment">//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b</span></span><br><span class="line">		<span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;a的值大于b&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;a的值不大于b&quot;</span>);</span><br><span class="line">		&#125;		</span><br><span class="line">		System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>if语句案例：奇偶数</p>
<p>需求：任意给出一个整数，请用程序实现判断该整数是奇数还是偶数，并在控制台输出该整数是奇数还是偶数。</p>
<p>分析：</p>
<p>​	①为了体现任意给出一个整数，采用键盘录入一个数据</p>
<p>​	②判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构</p>
<p>​	③判断是否偶数需要使用取余运算符实现该功能 number % 2 &#x3D;&#x3D; 0</p>
<p>​	④根据判定情况，在控制台输出对应的内容</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfTest01</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//为了体现任意给出一个整数，采用键盘录入一个数据。(导包，创建对象，接收数据)</span></span><br><span class="line">		<span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);		</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入一个整数：&quot;</span>);</span><br><span class="line">		<span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();	</span><br><span class="line">		<span class="comment">//判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构		</span></span><br><span class="line">		<span class="comment">//判断是否偶数需要使用取余运算符实现该功能 number % 2 == 0</span></span><br><span class="line">		<span class="comment">//根据判定情况，在控制台输出对应的内容</span></span><br><span class="line">		<span class="keyword">if</span>(number%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">			System.out.println(number + <span class="string">&quot;是偶数&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(number + <span class="string">&quot;是奇数&quot;</span>);</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="if语句格式3"><a href="#if语句格式3" class="headerlink" title="if语句格式3"></a>if语句格式3</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式<span class="number">1</span>) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;	</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (关系表达式<span class="number">2</span>) &#123;</span><br><span class="line">    语句体<span class="number">2</span>;	</span><br><span class="line">&#125; </span><br><span class="line">…</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    语句体n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>执行流程：</p>
<p>①首先计算关系表达式1的值</p>
<p>②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值</p>
<p>③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值</p>
<p>④…</p>
<p>⑤如果没有任何关系表达式为true，就执行语句体n+1。</p>
<p><img src="/../images/1545616667104.png" class="lazyload placeholder" data-srcset="/../images/1545616667104.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="1545616667104"></p>
<p>示例：键盘录入一个星期数(1,2,…7)，输出对应的星期一，星期二，…星期日</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo03</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line">		<span class="comment">// 需求：键盘录入一个星期数(1,2,...7)，输出对应的星期一，星期二，...星期日</span></span><br><span class="line">		<span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		System.out.println(<span class="string">&quot;请输入一个星期数(1-7)：&quot;</span>);</span><br><span class="line">		<span class="type">int</span> <span class="variable">week</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">		<span class="keyword">if</span>(week == <span class="number">1</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;星期一&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">2</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;星期二&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">3</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;星期三&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">4</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;星期四&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">5</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;星期五&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">6</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;星期六&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;星期日&quot;</span>);</span><br><span class="line">		&#125;	</span><br><span class="line">		System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>if语句格式3案例：</p>
<p>需求：小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。</p>
<p>分析：</p>
<p>​	①小明的考试成绩未知，可以使用键盘录入的方式获取值</p>
<p>​	②由于奖励种类较多，属于多种判断，采用if…else…if格式实现</p>
<p>​	③为每种判断设置对应的条件</p>
<p>​	④为每种判断设置对应的奖励</p>
<h3 id="2-4-分支结构：switch语句"><a href="#2-4-分支结构：switch语句" class="headerlink" title="2.4  分支结构：switch语句"></a>2.4  分支结构：switch语句</h3><h5 id="switch语句结构（掌握）"><a href="#switch语句结构（掌握）" class="headerlink" title="switch语句结构（掌握）"></a>switch语句结构（掌握）</h5><ul>
<li><p>格式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (表达式) &#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">		语句体<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		语句体<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	...</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		语句体n+<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>执行流程：</p>
<ul>
<li>首先计算出表达式的值 </li>
<li>其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。 </li>
<li>最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。</li>
</ul>
</li>
</ul>
<h5 id="switch语句练习-春夏秋冬（应用）"><a href="#switch语句练习-春夏秋冬（应用）" class="headerlink" title="switch语句练习-春夏秋冬（应用）"></a>switch语句练习-春夏秋冬（应用）</h5><ul>
<li>需求：一年有12个月，分属于春夏秋冬4个季节，键盘录入一个月份，请用程序实现判断该月份属于哪个季节，并输出。 </li>
<li>编写一个程序员从键盘输入一个年份，并且判断他是平年还是润年</li>
<li>运行结果：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">春：3、4、5</span><br><span class="line">夏：6、7、8</span><br><span class="line">秋：9、10、11</span><br><span class="line">冬：1、2、12</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>示例代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//键盘录入月份数据，使用变量接收</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个月份：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="comment">//case穿透</span></span><br><span class="line">        <span class="keyword">switch</span>(month) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;冬季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;春季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;夏季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;秋季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;你输入的月份有误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>注意：如果switch中得case，没有对应break的话，则会出现case穿透的现象。</li>
</ul>
<h3 id="2-5-循环结构：for循环"><a href="#2-5-循环结构：for循环" class="headerlink" title="2.5 循环结构：for循环"></a>2.5 循环结构：for循环</h3><h4 id="for循环结构（掌握）"><a href="#for循环结构（掌握）" class="headerlink" title="for循环结构（掌握）"></a>for循环结构（掌握）</h4><ul>
<li><p>循环：</p>
<p>循环语句可以在满足循环条件的情况下，反复执行某一段代码，这段被重复执行的代码被称为循环体语句，当反复 执行这个循环体时，需要在合适的时候把循环判断条件修改为false，从而结束循环，否则循环将一直执行下去，形 成死循环。 </p>
</li>
<li><p>for循环格式：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化语句;条件判断语句;条件控制语句) &#123;</span><br><span class="line">	循环体语句;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>格式解释：</p>
<ul>
<li>初始化语句：  用于表示循环开启时的起始状态，简单说就是循环开始的时候什么样</li>
<li>条件判断语句：用于表示循环反复执行的条件，简单说就是判断循环是否能一直执行下去</li>
<li>循环体语句：  用于表示循环反复执行的内容，简单说就是循环反复执行的事情</li>
<li>条件控制语句：用于表示循环执行中每次变化的内容，简单说就是控制循环是否能执行下去</li>
</ul>
</li>
<li><p>执行流程：</p>
<p>①执行初始化语句</p>
<p>②执行条件判断语句，看其结果是true还是false</p>
<p>​             如果是false，循环结束</p>
<p>​             如果是true，继续执行</p>
<p>③执行循环体语句</p>
<p>④执行条件控制语句</p>
<p>⑤回到②继续</p>
</li>
</ul>
<h4 id="for循环练习-输出数据（应用）"><a href="#for循环练习-输出数据（应用）" class="headerlink" title="for循环练习-输出数据（应用）"></a>for循环练习-输出数据（应用）</h4><ul>
<li>需求：在控制台输出1-5和5-1的数据 </li>
<li>示例代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//需求：输出数据1-5</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">			System.out.println(i);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line">		<span class="comment">//需求：输出数据5-1</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">5</span>; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">			System.out.println(i);</span><br><span class="line">		&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="for循环练习-求和（应用）"><a href="#for循环练习-求和（应用）" class="headerlink" title="for循环练习-求和（应用）"></a>for循环练习-求和（应用）</h4><ul>
<li>需求：求1-5之间的数据和，并把求和结果在控制台输出  </li>
<li>示例代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		<span class="comment">//从1开始到5结束的数据，使用循环结构完成</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">			<span class="comment">//将反复进行的事情写入循环结构内部</span></span><br><span class="line">             <span class="comment">// 此处反复进行的事情是将数据 i 加到用于保存最终求和的变量 sum 中</span></span><br><span class="line">			sum += i;</span><br><span class="line">			<span class="comment">/*</span></span><br><span class="line"><span class="comment">				sum += i;	sum = sum + i;</span></span><br><span class="line"><span class="comment">				第一次：sum = sum + i = 0 + 1 = 1;</span></span><br><span class="line"><span class="comment">				第二次：sum = sum + i = 1 + 2 = 3;</span></span><br><span class="line"><span class="comment">				第三次：sum = sum + i = 3 + 3 = 6;</span></span><br><span class="line"><span class="comment">				第四次：sum = sum + i = 6 + 4 = 10;</span></span><br><span class="line"><span class="comment">				第五次：sum = sum + i = 10 + 5 = 15;</span></span><br><span class="line"><span class="comment">			*/</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class="line">		System.out.println(<span class="string">&quot;1-5之间的数据和是：&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>本题要点：<ul>
<li>今后遇到的需求中，如果带有求和二字，请立即联想到求和变量</li>
<li>求和变量的定义位置，必须在循环外部，如果在循环内部则计算出的数据将是错误的</li>
</ul>
</li>
</ul>
<h4 id="for循环练习-求偶数和（应用）"><a href="#for循环练习-求偶数和（应用）" class="headerlink" title="for循环练习-求偶数和（应用）"></a>for循环练习-求偶数和（应用）</h4><ul>
<li>需求：求1-100之间的偶数和，并把求和结果在控制台输出 }</li>
<li>示例代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		<span class="comment">//对1-100的数据求和与1-5的数据求和几乎完全一样，仅仅是结束条件不同</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">100</span>; i++) &#123;</span><br><span class="line">			<span class="comment">//对1-100的偶数求和，需要对求和操作添加限制条件，判断是否是偶数</span></span><br><span class="line">			<span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">				sum += i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class="line">		System.out.println(<span class="string">&quot;1-100之间的偶数和是：&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="for循环练习-水仙花（应用）"><a href="#for循环练习-水仙花（应用）" class="headerlink" title="for循环练习-水仙花（应用）"></a>for循环练习-水仙花（应用）</h4><ul>
<li>需求：在控制台输出所有的“水仙花数” </li>
<li>解释：什么是水仙花数？<ul>
<li>水仙花数，指的是一个三位数，个位、十位、百位的数字立方和等于原数<ul>
<li>例如<code>153  3*3*3 + 5*5*5 + 1*1*1 = 153</code></li>
</ul>
</li>
</ul>
</li>
<li>思路：<ol>
<li>获取所有的三位数，准备进行筛选，最小的三位数为100，最大的三位数为999，使用for循环获取</li>
<li>获取每一个三位数的个位，十位，百位，做if语句判断是否是水仙花数</li>
</ol>
</li>
<li>示例代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//输出所有的水仙花数必然要使用到循环，遍历所有的三位数，三位数从100开始，到999结束</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">100</span>; i&lt;<span class="number">1000</span>; i++) &#123;</span><br><span class="line">			<span class="comment">//在计算之前获取三位数中每个位上的值</span></span><br><span class="line">			<span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">			<span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span> i/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">			<span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span> i/<span class="number">10</span>/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//判定条件是将三位数中的每个数值取出来，计算立方和后与原始数字比较是否相等</span></span><br><span class="line">			<span class="keyword">if</span>(ge*ge*ge + shi*shi*shi + bai*bai*bai == i) &#123;</span><br><span class="line">				<span class="comment">//输出满足条件的数字就是水仙花数</span></span><br><span class="line">				System.out.println(i);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="for循环练习-统计水仙花数个数（应用）"><a href="#for循环练习-统计水仙花数个数（应用）" class="headerlink" title="for循环练习-统计水仙花数个数（应用）"></a>for循环练习-统计水仙花数个数（应用）</h4><ul>
<li>需求：统计“水仙花数”一共有多少个，并在控制台输出个数 </li>
<li>示例代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//定义变量count，用于保存“水仙花数”的数量，初始值为0</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		<span class="comment">//输出所有的水仙花数必然要使用到循环，遍历所有的三位数，三位数从100开始，到999结束</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">100</span>; i&lt;<span class="number">1000</span>; i++) &#123;</span><br><span class="line">			<span class="comment">//在计算之前获取三位数中每个位上的值</span></span><br><span class="line">			<span class="type">int</span> <span class="variable">ge</span> <span class="operator">=</span> i%<span class="number">10</span>;</span><br><span class="line">			<span class="type">int</span> <span class="variable">shi</span> <span class="operator">=</span> i/<span class="number">10</span>%<span class="number">10</span>;<span class="comment">// </span></span><br><span class="line">			<span class="type">int</span> <span class="variable">bai</span> <span class="operator">=</span> i/<span class="number">10</span>/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">			<span class="comment">//在判定水仙花数的过程中，满足条件不再输出，更改为修改count的值，使count+1</span></span><br><span class="line">			<span class="keyword">if</span>(ge*ge*ge + shi*shi*shi + bai*bai*bai == i) &#123;</span><br><span class="line">				count++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//打印输出最终结果</span></span><br><span class="line">		System.out.println(<span class="string">&quot;水仙花共有：&quot;</span> + count + <span class="string">&quot;个&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>本题要点：<ul>
<li>今后如果需求带有统计xxx，请先想到计数器变量</li>
<li>计数器变量定义的位置，必须在循环外部</li>
</ul>
</li>
</ul>
<h3 id="2-6-循环结构：-while循环"><a href="#2-6-循环结构：-while循环" class="headerlink" title="2.6 循环结构： while循环"></a>2.6 循环结构： while循环</h3><h4 id="while结构（掌握）"><a href="#while结构（掌握）" class="headerlink" title="while结构（掌握）"></a>while结构（掌握）</h4><ul>
<li><p>while循环完整格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span> (条件判断语句) &#123;</span><br><span class="line">	循环体语句;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>while循环执行流程：</p>
<p>①执行初始化语句</p>
<p>②执行条件判断语句，看其结果是true还是false</p>
<p>​             如果是false，循环结束</p>
<p>​             如果是true，继续执行</p>
<p>③执行循环体语句</p>
<p>④执行条件控制语句</p>
<p>⑤回到②继续</p>
</li>
<li><p>示例代码：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//需求：在控制台输出5次&quot;HelloWorld&quot;</span></span><br><span class="line">		<span class="comment">//for循环实现</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line">		<span class="comment">//while循环实现</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span>(j&lt;=<span class="number">5</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">			j++;</span><br><span class="line">		&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="while循环练习-珠穆朗玛峰（应用）"><a href="#while循环练习-珠穆朗玛峰（应用）" class="headerlink" title="while循环练习-珠穆朗玛峰（应用）"></a>while循环练习-珠穆朗玛峰（应用）</h4><ul>
<li>需求：世界最高山峰是珠穆朗玛峰(8844.43米&#x3D;8844430毫米)，假如我有一张足够大的纸，它的厚度是0.1毫米。请问，我折叠多少次，可以折成珠穆朗玛峰的高度?</li>
<li>示例代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//定义一个计数器，初始值为0</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		<span class="comment">//定义纸张厚度</span></span><br><span class="line">		<span class="type">double</span> <span class="variable">paper</span> <span class="operator">=</span> <span class="number">0.1</span>;</span><br><span class="line">		<span class="comment">//定义珠穆朗玛峰的高度</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">zf</span> <span class="operator">=</span> <span class="number">8844430</span>;</span><br><span class="line">		<span class="comment">//因为要反复折叠，所以要使用循环，但是不知道折叠多少次，这种情况下更适合使用while循环</span></span><br><span class="line">		<span class="comment">//折叠的过程中当纸张厚度大于珠峰就停止了，因此继续执行的要求是纸张厚度小于珠峰高度</span></span><br><span class="line">		<span class="keyword">while</span>(paper &lt;= zf) &#123;</span><br><span class="line">			<span class="comment">//循环的执行过程中每次纸张折叠，纸张的厚度要加倍</span></span><br><span class="line">			paper *= <span class="number">2</span>;</span><br><span class="line">			<span class="comment">//在循环中执行累加，对应折叠了多少次</span></span><br><span class="line">			count++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//打印计数器的值</span></span><br><span class="line">		System.out.println(<span class="string">&quot;需要折叠：&quot;</span> + count + <span class="string">&quot;次&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-7-循环结构：do-while循环"><a href="#2-7-循环结构：do-while循环" class="headerlink" title="2.7 循环结构：do-while循环"></a>2.7 循环结构：do-while循环</h3><h4 id="do…while循环结构（掌握）"><a href="#do…while循环结构（掌握）" class="headerlink" title="do…while循环结构（掌握）"></a>do…while循环结构（掌握）</h4><ul>
<li><p>完整格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">	循环体语句;</span><br><span class="line">	条件控制语句;</span><br><span class="line">&#125;<span class="keyword">while</span>(条件判断语句);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>执行流程：</p>
<p>① 执行初始化语句</p>
<p>② 执行循环体语句</p>
<p>③ 执行条件控制语句</p>
<p>④ 执行条件判断语句，看其结果是true还是false</p>
<p>如果是false，循环结束</p>
<p>如果是true，继续执行</p>
<p>⑤ 回到②继续</p>
</li>
<li><p>示例代码：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DoWhileDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//需求：在控制台输出5次&quot;HelloWorld&quot;</span></span><br><span class="line">		<span class="comment">//for循环实现</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line">		<span class="comment">//do...while循环实现</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">do</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">			j++;</span><br><span class="line">		&#125;<span class="keyword">while</span>(j&lt;=<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-8-三种循环的区别（理解）"><a href="#2-8-三种循环的区别（理解）" class="headerlink" title="2.8  三种循环的区别（理解）"></a>2.8  三种循环的区别（理解）</h3><ul>
<li>三种循环的区别<ul>
<li>for循环和while循环先判断条件是否成立，然后决定是否执行循环体（先判断后执行）</li>
<li>do…while循环先执行一次循环体，然后判断条件是否成立，是否继续执行循环体（先执行后判断）</li>
</ul>
</li>
<li>for循环和while的区别<ul>
<li>条件控制语句所控制的自增变量，因为归属for循环的语法结构中，在for循环结束后，就不能再次被访问到了</li>
<li>条件控制语句所控制的自增变量，对于while循环来说不归属其语法结构中，在while循环结束后，该变量还可以继续使用</li>
</ul>
</li>
</ul>
<h3 id="2-9-跳转控制语句（掌握）"><a href="#2-9-跳转控制语句（掌握）" class="headerlink" title="2.9   跳转控制语句（掌握）"></a>2.9   跳转控制语句（掌握）</h3><ul>
<li>跳转控制语句（break）<ul>
<li>跳出循环，结束循环</li>
</ul>
</li>
<li>跳转控制语句（continue）<ul>
<li>跳过本次循环，继续下次循环</li>
</ul>
</li>
<li>注意： continue只能在循环中进行使用！</li>
</ul>
<h3 id="2-10-循环嵌套（理解）"><a href="#2-10-循环嵌套（理解）" class="headerlink" title="2.10 循环嵌套（理解）"></a>2.10 循环嵌套（理解）</h3><ul>
<li><p>循环嵌套概述：在循环中，继续定义循环</p>
</li>
<li><p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">//外循环控制小时的范围，内循环控制分钟的范围</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">hour</span> <span class="operator">=</span> <span class="number">0</span>; hour &lt; <span class="number">24</span>; hour++) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">minute</span> <span class="operator">=</span> <span class="number">0</span>; minute &lt; <span class="number">60</span>; minute++) &#123;</span><br><span class="line">               System.out.println(hour + <span class="string">&quot;时&quot;</span> + minute + <span class="string">&quot;分&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>
</li>
<li><p>理解：</p>
<ul>
<li>请反复理解这句话（整个内循环，就是外循环的一个循环体，内部循环体没有执行完毕，外循环是不会继续向下执行的）</li>
</ul>
</li>
<li><p>结论：</p>
<ul>
<li>外循环执行一次，内循环执行一圈</li>
</ul>
</li>
</ul>
<h3 id="2-11-Random"><a href="#2-11-Random" class="headerlink" title="2.11 Random"></a>2.11 Random</h3><h4 id="Random产生随机数（掌握）"><a href="#Random产生随机数（掌握）" class="headerlink" title="Random产生随机数（掌握）"></a>Random产生随机数（掌握）</h4><ul>
<li><p>概述：</p>
<ul>
<li>Random类似Scanner，也是Java提供好的API，内部提供了产生随机数的功能<ul>
<li>API后续课程详细讲解，现在可以简单理解为Java已经写好的代码</li>
</ul>
</li>
</ul>
</li>
<li><p>使用步骤：</p>
<ol>
<li><p>导入包</p>
<p>import java.util.Random;</p>
</li>
<li><p>创建对象</p>
<p>Random r &#x3D; new Random();</p>
</li>
<li><p>产生随机数</p>
<p>int num &#x3D; r.nextInt(10);</p>
<p>解释： 10代表的是一个范围，如果括号写10，产生的随机数就是0-9，括号写20，参数的随机数则是0-19</p>
</li>
</ol>
</li>
<li><p>示例代码：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RandomDemo</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//创建对象</span></span><br><span class="line">		<span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">		<span class="comment">//用循环获取10个随机数</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">			<span class="comment">//获取随机数</span></span><br><span class="line">			<span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(<span class="number">10</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;number:&quot;</span> + number);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//需求：获取一个1-100之间的随机数</span></span><br><span class="line">		<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> r.nextInt(<span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">		System.out.println(x);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="Random练习-猜数字（应用）"><a href="#Random练习-猜数字（应用）" class="headerlink" title="Random练习-猜数字（应用）"></a>Random练习-猜数字（应用）</h4><ul>
<li><p>需求：</p>
<p>程序自动生成一个1-100之间的数字，使用程序实现猜出这个数字是多少？</p>
<p>当猜错的时候根据不同情况给出相应的提示</p>
<p>A. 如果猜的数字比真实数字大，提示你猜的数据大了</p>
<p>B. 如果猜的数字比真实数字小，提示你猜的数据小了</p>
<p>C. 如果猜的数字与真实数字相等，提示恭喜你猜中了</p>
</li>
<li><p>示例代码：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RandomTest</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//要完成猜数字的游戏，首先需要有一个要猜的数字，使用随机数生成该数字，范围1到100</span></span><br><span class="line">		<span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">		<span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(<span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">			<span class="comment">//使用程序实现猜数字，每次均要输入猜测的数字值，需要使用键盘录入实现</span></span><br><span class="line">			<span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">			</span><br><span class="line">			System.out.println(<span class="string">&quot;请输入你要猜的数字：&quot;</span>);</span><br><span class="line">			<span class="type">int</span> <span class="variable">guessNumber</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//比较输入的数字和系统产生的数据，需要使用分支语句。</span></span><br><span class="line">             <span class="comment">//这里使用if..else..if..格式，根据不同情况进行猜测结果显示</span></span><br><span class="line">			<span class="keyword">if</span>(guessNumber &gt; number) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;你猜的数字&quot;</span> + guessNumber + <span class="string">&quot;大了&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span>(guessNumber &lt; number) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;你猜的数字&quot;</span> + guessNumber + <span class="string">&quot;小了&quot;</span>);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;恭喜你猜中了&quot;</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="3-数组"><a href="#3-数组" class="headerlink" title="3.数组"></a>3.数组</h2><h3 id="3-1什么是数组【理解】"><a href="#3-1什么是数组【理解】" class="headerlink" title="3.1什么是数组【理解】"></a>3.1什么是数组【理解】</h3><p>​	数组就是存储数据长度固定的容器，存储多个数据的数据类型要一致。 </p>
<h3 id="3-2数组定义格式【记忆】"><a href="#3-2数组定义格式【记忆】" class="headerlink" title="3.2数组定义格式【记忆】"></a>3.2数组定义格式【记忆】</h3><h4 id="3-2-1第一种"><a href="#3-2-1第一种" class="headerlink" title="3.2.1第一种"></a>3.2.1第一种</h4><p>​	数据类型[] 数组名</p>
<p>​	示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] arr;        </span><br><span class="line"><span class="type">double</span>[] arr;      </span><br><span class="line"><span class="type">char</span>[] arr;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-2-2第二种"><a href="#3-2-2第二种" class="headerlink" title="3.2.2第二种"></a>3.2.2第二种</h4><p>​	数据类型 数组名[]</p>
<p>​	示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> arr[];</span><br><span class="line"><span class="type">double</span> arr[];</span><br><span class="line"><span class="type">char</span> arr[];</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-3数组动态初始化【应用】"><a href="#3-3数组动态初始化【应用】" class="headerlink" title="3.3数组动态初始化【应用】"></a>3.3数组动态初始化【应用】</h3><h4 id="3-3-1什么是动态初始化"><a href="#3-3-1什么是动态初始化" class="headerlink" title="3.3.1什么是动态初始化"></a>3.3.1什么是动态初始化</h4><p>​	数组动态初始化就是只给定数组的长度，由系统给出默认初始化值。</p>
<h4 id="3-3-2动态初始化格式"><a href="#3-3-2动态初始化格式" class="headerlink" title="3.3.2动态初始化格式"></a>3.3.2动态初始化格式</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">数据类型[] 数组名 = <span class="keyword">new</span> 数据类型[数组长度];</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-3-3动态初始化格式详解"><a href="#3-3-3动态初始化格式详解" class="headerlink" title="3.3.3动态初始化格式详解"></a>3.3.3动态初始化格式详解</h4><ul>
<li>等号左边：<ul>
<li>int:数组的数据类型</li>
<li>[]:代表这是一个数组</li>
<li>arr:代表数组的名称</li>
</ul>
</li>
<li>等号右边：<ul>
<li>new:为数组开辟内存空间</li>
<li>int:数组的数据类型</li>
<li>[]:代表这是一个数组</li>
<li>5:代表数组的长度</li>
</ul>
</li>
</ul>
<h3 id="3-4数组元素访问【应用】"><a href="#3-4数组元素访问【应用】" class="headerlink" title="3.4数组元素访问【应用】"></a>3.4数组元素访问【应用】</h3><h4 id="3-4-1什么是索引"><a href="#3-4-1什么是索引" class="headerlink" title="3.4.1什么是索引"></a>3.4.1什么是索引</h4><p>​	每一个存储到数组的元素，都会自动的拥有一个编号，从0开始。</p>
<p>​	这个自动编号称为数组索引(index)，可以通过数组的索引访问到数组中的元素。 	</p>
<h4 id="3-4-2访问数组元素格式"><a href="#3-4-2访问数组元素格式" class="headerlink" title="3.4.2访问数组元素格式"></a>3.4.2访问数组元素格式</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">数组名[索引];</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-4-3示例代码"><a href="#3-4-3示例代码" class="headerlink" title="3.4.3示例代码"></a>3.4.3示例代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组名</span></span><br><span class="line">        System.out.println(arr); <span class="comment">//[I@880ec60</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组中的元素</span></span><br><span class="line">        System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-5内存分配【理解】"><a href="#3-5内存分配【理解】" class="headerlink" title="3.5内存分配【理解】"></a>3.5内存分配【理解】</h3><h4 id="3-5-1内存概述"><a href="#3-5-1内存概述" class="headerlink" title="3.5.1内存概述"></a>3.5.1内存概述</h4><p>​	内存是计算机中的重要原件，临时存储区域，作用是运行程序。</p>
<p>​	我们编写的程序是存放在硬盘中的，在硬盘中的程序是不会运行的。</p>
<p>​	必须放进内存中才能运行，运行完毕后会清空内存。 </p>
<p>​	Java虚拟机要运行程序，必须要对内存进行空间的分配和管理。 </p>
<h4 id="3-5-2java中的内存分配"><a href="#3-5-2java中的内存分配" class="headerlink" title="3.5.2java中的内存分配"></a>3.5.2java中的内存分配</h4><ul>
<li>目前我们只需要记住两个内存，分别是：栈内存和堆内存</li>
</ul>
<table>
<thead>
<tr>
<th>区域名称</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>寄存器</td>
<td>给CPU使用，和我们开发无关。</td>
</tr>
<tr>
<td>本地方法栈</td>
<td>JVM在使用操作系统功能的时候使用，和我们开发无关。</td>
</tr>
<tr>
<td>方法区</td>
<td>存储可以运行的class文件。</td>
</tr>
<tr>
<td>堆内存</td>
<td>存储对象或者数组，new来创建的，都存储在堆内存。</td>
</tr>
<tr>
<td>方法栈</td>
<td>方法运行时使用的内存，比如main方法运行，进入方法栈中执行。</td>
</tr>
</tbody></table>
<h3 id="3-6单个数组的内存图【理解】"><a href="#3-6单个数组的内存图【理解】" class="headerlink" title="3.6单个数组的内存图【理解】"></a>3.6单个数组的内存图【理解】</h3><p>new int[3]: 在堆内存里申请一块空间存储int类型的变量(初始化时值都为0)</p>
<p>int[] array: 在栈内存申请一块内存存储堆内存里数组的首地址</p>
<p>array[i]: 通过堆内存内地址的首地址再加上偏移量 i 可以读写数组</p>
<p><img src="/../images/1662380236104.png" class="lazyload placeholder" data-srcset="/../images/1662380236104.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="1662380236104"></p>
<h3 id="3-7多个数组的内存图【理解】"><a href="#3-7多个数组的内存图【理解】" class="headerlink" title="3.7多个数组的内存图【理解】"></a>3.7多个数组的内存图【理解】</h3><p>同单个数组</p>
<p><img src="/../images/1662380255118.png" class="lazyload placeholder" data-srcset="/../images/1662380255118.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="1662380255118"></p>
<h3 id="3-8多个数组指向相同内存图【理解】"><a href="#3-8多个数组指向相同内存图【理解】" class="headerlink" title="3.8多个数组指向相同内存图【理解】"></a>3.8多个数组指向相同内存图【理解】</h3><p>多个栈内存数组变量存储同一个堆内存数组的首地址</p>
<p><img src="/../images/1662380276146.png" class="lazyload placeholder" data-srcset="/../images/1662380276146.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="1662380276146"></p>
<h3 id="3-9数组静态初始化【应用】"><a href="#3-9数组静态初始化【应用】" class="headerlink" title="3.9数组静态初始化【应用】"></a>3.9数组静态初始化【应用】</h3><h4 id="3-9-1什么是静态初始化"><a href="#3-9-1什么是静态初始化" class="headerlink" title="3.9.1什么是静态初始化"></a>3.9.1什么是静态初始化</h4><p>​	在创建数组时，直接将元素确定	</p>
<h4 id="3-9-2静态初始化格式"><a href="#3-9-2静态初始化格式" class="headerlink" title="3.9.2静态初始化格式"></a>3.9.2静态初始化格式</h4><ul>
<li><p>完整版格式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">数据类型[] 数组名 = <span class="keyword">new</span> 数据类型[]&#123;元素<span class="number">1</span>,元素<span class="number">2</span>,...&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>简化版格式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">数据类型[] 数组名 = &#123;元素<span class="number">1</span>,元素<span class="number">2</span>,...&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="3-9-3示例代码"><a href="#3-9-3示例代码" class="headerlink" title="3.9.3示例代码"></a>3.9.3示例代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义数组</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组名</span></span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组中的元素</span></span><br><span class="line">        System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-10数组操作的两个常见小问题【应用】"><a href="#3-10数组操作的两个常见小问题【应用】" class="headerlink" title="3.10数组操作的两个常见小问题【应用】"></a>3.10数组操作的两个常见小问题【应用】</h3><h4 id="3-10-1索引越界异常"><a href="#3-10-1索引越界异常" class="headerlink" title="3.10.1索引越界异常"></a>3.10.1索引越界异常</h4><ul>
<li><p>出现原因</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line">        System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>数组长度为3，索引范围是0~2，但是我们却访问了一个3的索引。</p>
<p>程序运行后，将会抛出ArrayIndexOutOfBoundsException 数组越界异常。在开发中，数组的越界异常是不能出现的，一旦出现了，就必须要修改我们编写的代码。 </p>
</li>
<li><p>解决方案</p>
<p>将错误的索引修改为正确的索引范围即可！</p>
</li>
</ul>
<h4 id="3-10-2空指针异常"><a href="#3-10-2空指针异常" class="headerlink" title="3.10.2空指针异常"></a>3.10.2空指针异常</h4><ul>
<li><p>出现原因</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把null赋值给数组</span></span><br><span class="line">        arr = <span class="literal">null</span>;</span><br><span class="line">        System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>arr &#x3D; null 这行代码，意味着变量arr将不会再保存数组的内存地址，也就不允许再操作数组了，因此运行的时候会抛出 NullPointerException 空指针异常。在开发中，数组的越界异常是不能出现的，一旦出现了，就必须要修改我们编写的代码。</p>
</li>
<li><p>解决方案</p>
<p>给数组一个真正的堆内存空间引用即可！</p>
</li>
</ul>
<h3 id="3-11数组遍历【应用】"><a href="#3-11数组遍历【应用】" class="headerlink" title="3.11数组遍历【应用】"></a>3.11数组遍历【应用】</h3><ul>
<li><p>数组遍历：就是将数组中的每个元素分别获取出来，就是遍历。遍历也是数组操作中的基石。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest01</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="type">int</span>[] arr = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">		System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">		System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">		System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">		System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line">		System.out.println(arr[<span class="number">4</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>以上代码是可以将数组中每个元素全部遍历出来，但是如果数组元素非常多，这种写法肯定不行，因此我们需要改造成循环的写法。数组的索引是 0 到 lenght-1 ，可以作为循环的条件出现。 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义数组</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用通用的遍历格式</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            System.out.println(arr[x]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="3-12数组最值【应用】"><a href="#3-12数组最值【应用】" class="headerlink" title="3.12数组最值【应用】"></a>3.12数组最值【应用】</h3><ul>
<li><p>最大值获取：从数组的所有元素中找出最大值。</p>
</li>
<li><p>实现思路：</p>
<ul>
<li>定义变量，保存数组0索引上的元素</li>
<li>遍历数组，获取出数组中的每个元素</li>
<li>将遍历到的元素和保存数组0索引上值的变量进行比较</li>
<li>如果数组元素的值大于了变量的值，变量记录住新的值</li>
<li>数组循环遍历结束，变量保存的就是数组中的最大值</li>
</ul>
</li>
<li><p>代码实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义数组</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">12</span>, <span class="number">45</span>, <span class="number">98</span>, <span class="number">73</span>, <span class="number">60</span>&#125;;</span><br><span class="line">        <span class="comment">//定义一个变量，用于保存最大值</span></span><br><span class="line">        <span class="comment">//取数组中第一个数据作为变量的初始值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//与数组中剩余的数据逐个比对，每次比对将最大值保存到变量中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[x] &gt; max) &#123;</span><br><span class="line">                max = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//循环结束后打印变量的值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;max:&quot;</span> + max);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="4-方法"><a href="#4-方法" class="headerlink" title="4. 方法"></a>4. 方法</h2><h3 id="4-1-方法的概念（理解）"><a href="#4-1-方法的概念（理解）" class="headerlink" title="4.1 方法的概念（理解）"></a>4.1 方法的概念（理解）</h3><p>​	方法（method）是将具有独立功能的代码块组织成为一个整体，使其具有特殊功能的代码集</p>
<ul>
<li>注意：<ul>
<li>方法必须先创建才可以使用，该过程成为方法定义</li>
<li>方法创建后并不是直接可以运行的，需要手动使用后，才执行，该过程成为方法调用</li>
</ul>
</li>
</ul>
<h3 id="4-2-方法的定义和调用"><a href="#4-2-方法的定义和调用" class="headerlink" title="4.2  方法的定义和调用"></a>4.2  方法的定义和调用</h3><h4 id="4-2-1-无参数方法定义和调用（掌握）"><a href="#4-2-1-无参数方法定义和调用（掌握）" class="headerlink" title="4.2.1 无参数方法定义和调用（掌握）"></a>4.2.1 无参数方法定义和调用（掌握）</h4><ul>
<li><p>定义格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名 (   ) &#123;</span><br><span class="line">	<span class="comment">// 方法体;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>范例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">method</span> <span class="params">(    )</span> &#123;</span><br><span class="line">	<span class="comment">// 方法体;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>调用格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">方法名();</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>范例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">method();</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>注意：</p>
<p>​	方法必须先定义，后调用，否则程序将报错</p>
</li>
</ul>
<h4 id="4-2-1-方法调用过程图解（理解）"><a href="#4-2-1-方法调用过程图解（理解）" class="headerlink" title="4.2.1 方法调用过程图解（理解）"></a>4.2.1 方法调用过程图解（理解）</h4><p><img src="/../images/%E6%97%A0%E5%8F%82%E6%95%B0%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E5%9B%BE%E8%A7%A3.png" class="lazyload placeholder" data-srcset="/../images/%E6%97%A0%E5%8F%82%E6%95%B0%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E5%9B%BE%E8%A7%A3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="无参数方法调用图解"></p>
<ul>
<li>总结：每个方法在被调用执行的时候，都会进入栈内存，并且拥有自己独立的内存空间，方法内部代码调用完毕之后，会从栈内存中弹栈消失。</li>
</ul>
<h3 id="4-3-带参数方法定义和调用"><a href="#4-3-带参数方法定义和调用" class="headerlink" title="4.3 带参数方法定义和调用"></a>4.3 带参数方法定义和调用</h3><h4 id="4-3-1-带参数方法定义和调用（掌握）"><a href="#4-3-1-带参数方法定义和调用（掌握）" class="headerlink" title="4.3.1 带参数方法定义和调用（掌握）"></a>4.3.1 带参数方法定义和调用（掌握）</h4><ul>
<li><p>定义格式：</p>
<p>参数：由数据类型和变量名组成 -  数据类型 变量名</p>
<p>参数范例：int a</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名 (参数<span class="number">1</span>) &#123;</span><br><span class="line">	方法体;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名 (参数<span class="number">1</span>, 参数<span class="number">2</span>, 参数<span class="number">3.</span>..) &#123;</span><br><span class="line">	方法体;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>范例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">isEvenNumber</span><span class="params">(<span class="type">int</span> number)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getMax</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>注意：</p>
<p>方法定义时，参数中的数据类型与变量名都不能缺少，缺少任意一个程序将报错</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">方法定义时，多个参数之间使用逗号( ，)分隔</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>调用格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">方法名(参数)；</span><br><span class="line"></span><br><span class="line">方法名(参数<span class="number">1</span>,参数<span class="number">2</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>范例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">isEvenNumber(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错</li>
</ul>
</li>
</ul>
<h4 id="4-3-2-形参和实参（理解）"><a href="#4-3-2-形参和实参（理解）" class="headerlink" title="4.3.2 形参和实参（理解）"></a>4.3.2 形参和实参（理解）</h4><ol>
<li>形参：方法定义中的参数</li>
</ol>
<p>​          等同于变量定义格式，例如：int number</p>
<ol start="2">
<li>实参：方法调用中的参数</li>
</ol>
<p>​          等同于使用变量或常量，例如： 10  number</p>
<h4 id="4-3-3-带参数方法练习（应用）"><a href="#4-3-3-带参数方法练习（应用）" class="headerlink" title="4.3.3 带参数方法练习（应用）"></a>4.3.3 带参数方法练习（应用）</h4><ul>
<li>需求：设计一个方法用于打印两个数中的较大数，数据来自于方法参数 }</li>
<li>思路：<ul>
<li>①定义一个方法，用于打印两个数字中的较大数，例如getMax() </li>
<li>②为方法定义两个参数，用于接收两个数字 </li>
<li>③使用分支语句分两种情况对两个数字的大小关系进行处理 </li>
<li>④在main()方法中调用定义好的方法（使用常量）</li>
<li>⑤在main()方法中调用定义好的方法（使用变量）</li>
</ul>
</li>
<li>代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法（使用常量）</span></span><br><span class="line">        getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//调用方法的时候，人家要几个，你就给几个，人家要什么类型的，你就给什么类型的</span></span><br><span class="line">        <span class="comment">//getMax(30);</span></span><br><span class="line">        <span class="comment">//getMax(10.0,20.0);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法（使用变量）</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        getMax(a, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于打印两个数字中的较大数，例如getMax()</span></span><br><span class="line">    <span class="comment">//为方法定义两个参数，用于接收两个数字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getMax</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="comment">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-4-带返回值方法的定义和调用"><a href="#4-4-带返回值方法的定义和调用" class="headerlink" title="4.4. 带返回值方法的定义和调用"></a>4.4. 带返回值方法的定义和调用</h3><h4 id="4-4-1-带返回值方法定义和调用（掌握）"><a href="#4-4-1-带返回值方法定义和调用（掌握）" class="headerlink" title="4.4.1 带返回值方法定义和调用（掌握）"></a>4.4.1 带返回值方法定义和调用（掌握）</h4><ul>
<li><p>定义格式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 数据类型 方法名 ( 参数 ) &#123; </span><br><span class="line">	<span class="keyword">return</span> 数据 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>范例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isEvenNumber</span><span class="params">( <span class="type">int</span> number )</span> &#123;           </span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">( <span class="type">int</span> a, <span class="type">int</span> b )</span> &#123;</span><br><span class="line">	<span class="keyword">return</span>  <span class="number">100</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>注意：<ul>
<li>方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序将报错</li>
</ul>
</li>
</ul>
</li>
<li><p>调用格式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">方法名 ( 参数 ) ;</span><br><span class="line">数据类型 变量名 = 方法名 ( 参数 ) ;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>范例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">isEvenNumber ( <span class="number">5</span> ) ;</span><br><span class="line"><span class="type">boolean</span>  <span class="variable">flag</span> <span class="operator">=</span>  isEvenNumber ( <span class="number">5</span> ); </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>注意：<ul>
<li>方法的返回值通常会使用变量接收，否则该返回值将无意义</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="4-4-2-带返回值方法练习（应用）"><a href="#4-4-2-带返回值方法练习（应用）" class="headerlink" title="4.4.2 带返回值方法练习（应用）"></a>4.4.2 带返回值方法练习（应用）</h4><ul>
<li><p>需求：设计一个方法可以获取两个数的较大值，数据来自于参数</p>
</li>
<li><p>思路：</p>
<ul>
<li>①定义一个方法，用于获取两个数字中的较大数 </li>
<li>②使用分支语句分两种情况对两个数字的大小关系进行处理 </li>
<li>③根据题设分别设置两种情况下对应的返回结果 </li>
<li>④在main()方法中调用定义好的方法并使用变量保存 </li>
<li>⑤在main()方法中调用定义好的方法并直接打印结果</li>
</ul>
</li>
<li><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法并使用变量保存</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法并直接打印结果</span></span><br><span class="line">        System.out.println(getMax(<span class="number">10</span>,<span class="number">20</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于获取两个数字中的较大数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="comment">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class="line">        <span class="comment">//根据题设分别设置两种情况下对应的返回结果</span></span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="4-5-方法的注意事项"><a href="#4-5-方法的注意事项" class="headerlink" title="4.5. 方法的注意事项"></a>4.5. 方法的注意事项</h3><h4 id="4-5-1-方法的注意事项（掌握）"><a href="#4-5-1-方法的注意事项（掌握）" class="headerlink" title="4.5.1 方法的注意事项（掌握）"></a>4.5.1 方法的注意事项（掌握）</h4><ul>
<li><p>方法不能嵌套定义</p>
<ul>
<li><p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">methodOne</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">methodTwo</span><span class="params">()</span> &#123;</span><br><span class="line">       		<span class="comment">// 这里会引发编译错误!!!</span></span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>void表示无返回值，可以省略return，也可以单独的书写return，后面不加数据</p>
<ul>
<li><p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">methodTwo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//return 100; 编译错误，因为没有具体返回值类型</span></span><br><span class="line">        <span class="keyword">return</span>;	</span><br><span class="line">        <span class="comment">//System.out.println(100); return语句后面不能跟数据或代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h4 id="4-5-2-方法的通用格式（掌握）"><a href="#4-5-2-方法的通用格式（掌握）" class="headerlink" title="4.5.2 方法的通用格式（掌握）"></a>4.5.2 方法的通用格式（掌握）</h4><ul>
<li><p>格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 返回值类型 方法名(参数) &#123;</span><br><span class="line">   方法体; </span><br><span class="line">   <span class="keyword">return</span> 数据 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>解释：</p>
<ul>
<li><p>public static 	修饰符，目前先记住这个格式</p>
<p>返回值类型	方法操作完毕之后返回的数据的数据类型</p>
<p>​			如果方法操作完毕，没有数据返回，这里写void，而且方法体中一般不写return</p>
<p> 方法名		调用方法时候使用的标识</p>
<p> 参数		由数据类型和变量名组成，多个参数之间用逗号隔开</p>
<p> 方法体		完成功能的代码块</p>
<p> return		如果方法操作完毕，有数据返回，用于把数据返回给调用者</p>
</li>
</ul>
</li>
<li><p>定义方法时，要做到两个明确</p>
<ul>
<li>明确返回值类型：主要是明确方法操作完毕之后是否有数据返回，如果没有，写void；如果有，写对应的数据类型</li>
<li>明确参数：主要是明确参数的类型和数量</li>
</ul>
</li>
<li><p>调用方法时的注意：</p>
<ul>
<li>void类型的方法，直接调用即可</li>
<li>非void类型的方法，推荐用变量接收调用</li>
</ul>
</li>
</ul>
<h3 id="4-6-方法重载"><a href="#4-6-方法重载" class="headerlink" title="4.6. 方法重载"></a>4.6. 方法重载</h3><h4 id="4-6-1-方法重载（理解）"><a href="#4-6-1-方法重载（理解）" class="headerlink" title="4.6.1 方法重载（理解）"></a>4.6.1 方法重载（理解）</h4><ul>
<li><p>方法重载概念</p>
<p>方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载</p>
<ul>
<li>多个方法在同一个类中</li>
<li>多个方法具有相同的方法名</li>
<li>多个方法的参数不相同，类型不同或者数量不同</li>
</ul>
</li>
<li><p>注意：</p>
<ul>
<li>重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式</li>
<li>重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说不能通过返回值来判定两个方法是否相互构成重载</li>
</ul>
</li>
<li><p>正确范例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">    	<span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">double</span> a)</span> &#123;</span><br><span class="line">    	<span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="type">float</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">    	<span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a , <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    	<span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>错误范例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">    	<span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123; 	<span class="comment">/*错误原因：重载与返回值无关*/</span></span><br><span class="line">    	<span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">double</span> a)</span> &#123; <span class="comment">/*错误原因：这是两个类的两个fn方法*/</span></span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="4-6-2-方法重载练习（掌握）"><a href="#4-6-2-方法重载练习（掌握）" class="headerlink" title="4.6.2 方法重载练习（掌握）"></a>4.6.2 方法重载练习（掌握）</h4><ul>
<li><p>需求：使用方法重载的思想，设计比较两个整数是否相同的方法，兼容全整数类型（byte,short,int,long） </p>
</li>
<li><p>思路：</p>
<ul>
<li>①定义比较两个数字的是否相同的方法compare()方法，参数选择两个int型参数</li>
<li>②定义对应的重载方法，变更对应的参数类型，参数变更为两个long型参数</li>
<li>③定义所有的重载方法，两个byte类型与两个short类型参数 </li>
<li>④完成方法的调用，测试运行结果</li>
</ul>
</li>
<li><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        System.out.println(compare(<span class="number">10</span>, <span class="number">20</span>));</span><br><span class="line">        System.out.println(compare((<span class="type">byte</span>) <span class="number">10</span>, (<span class="type">byte</span>) <span class="number">20</span>));</span><br><span class="line">        System.out.println(compare((<span class="type">short</span>) <span class="number">10</span>, (<span class="type">short</span>) <span class="number">20</span>));</span><br><span class="line">        System.out.println(compare(<span class="number">10L</span>, <span class="number">20L</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//int</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;int&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//byte</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(<span class="type">byte</span> a, <span class="type">byte</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;byte&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//short</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(<span class="type">short</span> a, <span class="type">short</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;short&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//long</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;long&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="4-7-方法的参数传递"><a href="#4-7-方法的参数传递" class="headerlink" title="4.7. 方法的参数传递"></a>4.7. 方法的参数传递</h3><h4 id="4-7-1-方法参数传递基本类型（理解）"><a href="#4-7-1-方法参数传递基本类型（理解）" class="headerlink" title="4.7.1 方法参数传递基本类型（理解）"></a>4.7.1 方法参数传递基本类型（理解）</h4><ul>
<li><p>测试代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArgsDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用change方法前：&quot;</span> + number);</span><br><span class="line">        change(number);</span><br><span class="line">        System.out.println(<span class="string">&quot;调用change方法后：&quot;</span> + number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">        number = <span class="number">200</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>结论：</p>
<ul>
<li>基本数据类型的参数，形式参数的改变，不影响实际参数</li>
</ul>
</li>
<li><p>结论依据：</p>
<ul>
<li><p>每个方法在栈内存中，都会有独立的栈空间，方法运行结束后就会弹栈消失</p>
<p><img src="/../images/%E6%96%B9%E6%B3%95%E4%BC%A0%E5%8F%82-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" class="lazyload placeholder" data-srcset="/../images/%E6%96%B9%E6%B3%95%E4%BC%A0%E5%8F%82-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="方法传参-基本数据类型"></p>
</li>
</ul>
</li>
</ul>
<h4 id="4-7-2-方法参数传递引用类型（理解）"><a href="#4-7-2-方法参数传递引用类型（理解）" class="headerlink" title="4.7.2 方法参数传递引用类型（理解）"></a>4.7.2 方法参数传递引用类型（理解）</h4><ul>
<li><p>测试代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArgsDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用change方法前：&quot;</span> + arr[<span class="number">1</span>]);</span><br><span class="line">        change(arr);</span><br><span class="line">        System.out.println(<span class="string">&quot;调用change方法后：&quot;</span> + arr[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">200</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>结论：</p>
<ul>
<li>对于引用类型的参数，形式参数的改变，影响实际参数的值</li>
</ul>
</li>
<li><p>结论依据：</p>
<ul>
<li><p>引用数据类型的传参，传入的是地址值，内存中会造成两个引用指向同一个内存的效果，所以即使方法弹栈，堆内存中的数据也已经是改变后的结果 </p>
<p><img src="/../images/%E6%96%B9%E6%B3%95%E4%BC%A0%E5%8F%82-%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" class="lazyload placeholder" data-srcset="/../images/%E6%96%B9%E6%B3%95%E4%BC%A0%E5%8F%82-%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="方法传参-引用数据类型"></p>
</li>
</ul>
</li>
</ul>
<h4 id="4-7-3-数组遍历（应用）"><a href="#4-7-3-数组遍历（应用）" class="headerlink" title="4.7.3 数组遍历（应用）"></a>4.7.3 数组遍历（应用）</h4><ul>
<li><p>需求：设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55] </p>
</li>
<li><p>思路：</p>
<ul>
<li><p>①因为要求结果在一行上输出，所以这里需要在学习一个新的输出语句System.out.print(“内容”);</p>
<p>System.out.println(“内容”); 输出内容并换行</p>
<p>System.out.print(“内容”); 输出内容不换行</p>
<p>System.out.println(); 起到换行的作用</p>
</li>
<li><p>②定义一个数组，用静态初始化完成数组元素初始化</p>
</li>
<li><p>③定义一个方法，用数组遍历通用格式对数组进行遍历</p>
</li>
<li><p>④用新的输出语句修改遍历操作</p>
</li>
<li><p>⑤调用遍历方法</p>
</li>
</ul>
</li>
<li><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodTest01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用静态初始化完成数组元素初始化</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        printArray(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用数组遍历通用格式对数组进行遍历</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：void</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(x == arr.length-<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print(arr[x]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(arr[x]+<span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="4-7-4-数组最大值（应用）"><a href="#4-7-4-数组最大值（应用）" class="headerlink" title="4.7.4 数组最大值（应用）"></a>4.7.4 数组最大值（应用）</h4><ul>
<li><p>需求：设计一个方法用于获取数组中元素的最大值 </p>
</li>
<li><p>思路：</p>
<ul>
<li>①定义一个数组，用静态初始化完成数组元素初始化</li>
<li>②定义一个方法，用来获取数组中的最大值，最值的认知和讲解我们在数组中已经讲解过了</li>
<li>③调用获取最大值方法，用变量接收返回结果</li>
<li>④把结果输出在控制台</li>
</ul>
</li>
<li><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodTest02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用静态初始化完成数组元素初始化</span></span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">12</span>, <span class="number">45</span>, <span class="number">98</span>, <span class="number">73</span>, <span class="number">60</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用获取最大值方法，用变量接收返回结果</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> getMax(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把结果输出在控制台</span></span><br><span class="line">        System.out.println(<span class="string">&quot;number:&quot;</span> + number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用来获取数组中的最大值</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：int</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[x] &gt; max) &#123;</span><br><span class="line">                max = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="5-面向对象"><a href="#5-面向对象" class="headerlink" title="5. 面向对象"></a>5. 面向对象</h2><h3 id="5-1-类和对象的理解"><a href="#5-1-类和对象的理解" class="headerlink" title="5.1 类和对象的理解"></a>5.1 类和对象的理解</h3><p>客观存在的事物皆为对象 ，所以我们也常常说万物皆对象。</p>
<ul>
<li>类<ul>
<li>类的理解<ul>
<li>类是对现实生活中一类具有共同属性和行为的事物的抽象</li>
<li>类是对象的数据类型，类是具有相同属性和行为的一组对象的集合</li>
<li>简单理解：类就是对现实事物的一种描述</li>
</ul>
</li>
<li>类的组成<ul>
<li>属性：指事物的特征，例如：手机事物（品牌，价格，尺寸）</li>
<li>行为：指事物能执行的操作，例如：手机事物（打电话，发短信）</li>
</ul>
</li>
</ul>
</li>
<li>类和对象的关系<ul>
<li>类：类是对现实生活中一类具有共同属性和行为的事物的抽象</li>
<li>对象：是能够看得到摸的着的真实存在的实体</li>
<li>简单理解：<strong>类是对事物的一种描述，对象则为具体存在的事物</strong></li>
</ul>
</li>
</ul>
<h3 id="5-2-类的定义"><a href="#5-2-类的定义" class="headerlink" title="5.2 类的定义"></a>5.2 类的定义</h3><p>类的组成是由属性和行为两部分组成</p>
<ul>
<li>属性：在类中通过成员变量来体现（类中方法外的变量）</li>
<li>行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）</li>
</ul>
<p>类的定义步骤：</p>
<p>①定义类</p>
<p>②编写类的成员变量</p>
<p>③编写类的成员方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> class 类名 &#123;</span><br><span class="line">	<span class="comment">// 成员变量</span></span><br><span class="line">	变量<span class="number">1</span>的数据类型 变量<span class="number">1</span>；</span><br><span class="line">	变量<span class="number">2</span>的数据类型 变量<span class="number">2</span>;</span><br><span class="line">	…</span><br><span class="line">	<span class="comment">// 成员方法</span></span><br><span class="line">	方法<span class="number">1</span>;</span><br><span class="line">	方法<span class="number">2</span>;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    手机类：</span></span><br><span class="line"><span class="comment">        类名：</span></span><br><span class="line"><span class="comment">        手机(Phone)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        成员变量：</span></span><br><span class="line"><span class="comment">        品牌(brand)</span></span><br><span class="line"><span class="comment">        价格(price)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        成员方法：</span></span><br><span class="line"><span class="comment">        打电话(call)</span></span><br><span class="line"><span class="comment">        发短信(sendMessage)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Phone</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    String brand;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">call</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;打电话&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;发短信&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-3-对象的使用"><a href="#5-3-对象的使用" class="headerlink" title="5.3 对象的使用"></a>5.3 对象的使用</h3><ul>
<li>创建对象的格式：<ul>
<li>类名 对象名 &#x3D; new 类名();</li>
</ul>
</li>
<li>调用成员的格式：<ul>
<li>对象名.成员变量</li>
<li>对象名.成员方法();</li>
</ul>
</li>
<li>示例代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    创建对象</span></span><br><span class="line"><span class="comment">        格式：类名 对象名 = new 类名();</span></span><br><span class="line"><span class="comment">        范例：Phone p = new Phone();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    使用对象</span></span><br><span class="line"><span class="comment">        1：使用成员变量</span></span><br><span class="line"><span class="comment">            格式：对象名.变量名</span></span><br><span class="line"><span class="comment">            范例：p.brand</span></span><br><span class="line"><span class="comment">        2：使用成员方法</span></span><br><span class="line"><span class="comment">            格式：对象名.方法名()</span></span><br><span class="line"><span class="comment">            范例：p.call()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PhoneDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Phone</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Phone</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员变量</span></span><br><span class="line">        System.out.println(p.brand);</span><br><span class="line">        System.out.println(p.price);</span><br><span class="line"></span><br><span class="line">        p.brand = <span class="string">&quot;小米&quot;</span>;</span><br><span class="line">        p.price = <span class="number">2999</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(p.brand);</span><br><span class="line">        System.out.println(p.price);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员方法</span></span><br><span class="line">        p.call();</span><br><span class="line">        p.sendMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-4-成员变量和局部变量"><a href="#5-4-成员变量和局部变量" class="headerlink" title="5.4. 成员变量和局部变量"></a>5.4. 成员变量和局部变量</h3><h4 id="5-4-1-成员变量和局部变量的区别"><a href="#5-4-1-成员变量和局部变量的区别" class="headerlink" title="5.4.1 成员变量和局部变量的区别"></a>5.4.1 成员变量和局部变量的区别</h4><ul>
<li>类中位置不同：成员变量（类中方法外）局部变量（方法内部或方法声明上）</li>
<li>内存中位置不同：成员变量（堆内存）局部变量（栈内存）</li>
<li>生命周期不同：成员变量（随着对象的存在而存在，随着对象的消失而消失）局部变量（随着方法的调用而存在，醉着方法的调用完毕而消失）</li>
<li>初始化值不同：成员变量（有默认初始化值）局部变量（没有默认初始化值，必须先定义，赋值才能使用）</li>
</ul>
<h3 id="5-5-封装"><a href="#5-5-封装" class="headerlink" title="5.5. 封装"></a>5.5. 封装</h3><h4 id="5-5-1-private关键字"><a href="#5-5-1-private关键字" class="headerlink" title="5.5.1 private关键字"></a>5.5.1 private关键字</h4><p>private是一个修饰符，可以用来修饰成员（成员变量，成员方法）</p>
<ul>
<li><p>被private修饰的成员，只能在本类进行访问，针对private修饰的成员变量，如果需要被其他类使用，提供相应的操作</p>
<ul>
<li>提供“get变量名()”方法，用于获取成员变量的值，方法用public修饰</li>
<li>提供“set变量名(参数)”方法，用于设置成员变量的值，方法用public修饰</li>
</ul>
</li>
<li><p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供get/set方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(a&lt;<span class="number">0</span> || a&gt;<span class="number">120</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你给的年龄有误&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            age = a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">//给成员变量赋值</span></span><br><span class="line">        s.name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">        s.setAge(<span class="number">30</span>);</span><br><span class="line">        <span class="comment">//调用show方法</span></span><br><span class="line">        s.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="5-5-2-private的使用"><a href="#5-5-2-private的使用" class="headerlink" title="5.5.2 private的使用"></a>5.5.2 private的使用</h4><ul>
<li><p>需求：定义标准的学生类，要求name和age使用private修饰，并提供set和get方法以及便于显示数据的show方法，测试类中创建对象并使用，最终控制台输出  林青霞，30 </p>
</li>
<li><p>示例代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//get/set方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String n)</span> &#123;</span><br><span class="line">        name = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用set方法给成员变量赋值</span></span><br><span class="line">        s.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        s.setAge(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        s.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用get方法获取成员变量的值</span></span><br><span class="line">        System.out.println(s.getName() + <span class="string">&quot;---&quot;</span> + s.getAge());</span><br><span class="line">        System.out.println(s.getName() + <span class="string">&quot;,&quot;</span> + s.getAge());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="5-6-this关键字"><a href="#5-6-this关键字" class="headerlink" title="5.6 this关键字"></a>5.6 this关键字</h3><ul>
<li>this修饰的变量用于指代成员变量，其主要作用是（区分局部变量和成员变量的重名问题）<ul>
<li>方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量</li>
<li>方法的形参没有与成员变量同名，不带this修饰的变量指的是成员变量</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-7-封装思想"><a href="#5-7-封装思想" class="headerlink" title="5.7 封装思想"></a>5.7 封装思想</h3><ol>
<li>封装概述<br>是面向对象三大特征之一（封装，继承，多态）<br>是面向对象编程语言对客观世界的模拟，客观世界里成员变量都是隐藏在对象内部的，外界是无法直接操作的</li>
<li>封装原则<br>将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问<br>成员变量private，提供对应的getXxx()&#x2F;setXxx()方法</li>
<li>封装好处<br>通过方法来控制成员变量的操作，提高了代码的安全性<br>把代码用方法进行封装，提高了代码的复用性</li>
</ol>
<h3 id="5-8-构造方法"><a href="#5-8-构造方法" class="headerlink" title="5.8 构造方法"></a>5.8 构造方法</h3><h4 id="5-8-1-构造方法概述"><a href="#5-8-1-构造方法概述" class="headerlink" title="5.8.1 构造方法概述"></a>5.8.1 构造方法概述</h4><p>构造方法是一种特殊的方法</p>
<ul>
<li><p>作用：创建对象   Student stu &#x3D; <strong>new Student();</strong></p>
</li>
<li><p>格式：</p>
<p>public class 类名{</p>
<p>​        修饰符 类名( 参数 ) {</p>
<p>​        }</p>
<p>}</p>
</li>
<li><p>功能：主要是完成对象数据的初始化</p>
</li>
<li><p>示例代码：</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;无参构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5-8-2-构造方法的注意事项"><a href="#5-8-2-构造方法的注意事项" class="headerlink" title="5.8.2 构造方法的注意事项"></a>5.8.2 构造方法的注意事项</h4><ul>
<li>构造方法的创建</li>
</ul>
<p>如果没有定义构造方法，系统将给出一个默认的无参数构造方法<br>如果定义了构造方法，系统将不再提供默认的构造方法</p>
<ul>
<li>构造方法的重载</li>
</ul>
<p>如果自定义了带参构造方法，还要使用无参数构造方法，就必须再写一个无参数构造方法</p>
<ul>
<li>推荐的使用方式</li>
</ul>
<p>无论是否使用，都手工书写无参数构造方法</p>
<ul>
<li>重要功能！</li>
</ul>
<p>可以使用带参构造，为成员变量进行初始化</p>
<ul>
<li>示例代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name,<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s1.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public Student(String name)</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        s2.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public Student(int age)</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">30</span>);</span><br><span class="line">        s3.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public Student(String name,int age)</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;李四&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        s4.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="5-8-3-标准类制作"><a href="#5-8-3-标准类制作" class="headerlink" title="5.8.3 标准类制作"></a>5.8.3 标准类制作</h4><ul>
<li>需求：定义标准学生类，要求分别使用空参和有参构造方法创建对象，空参创建的对象通过setXxx赋值，有参创建的对象直接赋值，并通过show方法展示数据。 </li>
<li>示例代码：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    创建对象并为其成员变量赋值的两种方式</span></span><br><span class="line"><span class="comment">        1:无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class="line"><span class="comment">        2:使用带参构造方法直接创建带有属性值的对象</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s1.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">        s1.setAge(<span class="number">30</span>);</span><br><span class="line">        s1.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用带参构造方法直接创建带有属性值的对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;李四&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        s2.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java</category>
        <category>1.javase基础</category>
      </categories>
  </entry>
  <entry>
    <title>题库</title>
    <url>/2023/06/25/%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="6699bc76300a383240509ac6f4b1984b9308eb3264d1fba54b0f27b6f5da3912"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>大学计算机基础</category>
        <category>1.题库</category>
      </categories>
  </entry>
</search>
